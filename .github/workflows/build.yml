name: Build Using arduino-cli, create "Release" and sync with AWS

# on:
#   release:
#     types: [published]

on:
  push:
    tags:        
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    name: Compile using arduino-cli
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # download and install arduino-cli binary 
      - name: update system and install build tool
        run: |
          sudo apt-get update -y
          wget -qO arduino-cli.tar.gz https://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Linux_64bit.tar.gz
          sudo tar xf arduino-cli.tar.gz
          rm -rf arduino-cli.tar.gz
          sudo chmod u+x ./arduino-cli
          ./arduino-cli --help

      # 1. Create config file used by arduino-cli
      # 2. Add our board donwload uri in there
      # 3. Set a flag in that config file to download libs from git uris
      # 4. Update the core-index(which downloads automatically and updates arduino-cli's dependencies)
      # 5. Install our boards (i.e. uCs)
      - name: arduino-cli install boards [build dependencies]
        run: |
          ./arduino-cli core update-index
          ./arduino-cli config init
          ./arduino-cli config add board_manager.additional_urls http://drazzy.com/package_drazzy.com_index.json
          ./arduino-cli config set library.enable_unsafe_install true
          ./arduino-cli core update-index
          ./arduino-cli config dump
          ls -l
          ./arduino-cli core install megaTinyCore:megaavr
          ./arduino-cli core upgrade
          ./arduino-cli core update-index

      # Install the libraries 
      - name: arduino-cli install libraries [build dependencies]
        run: |
          ./arduino-cli lib install TinyMegaI2C
          ./arduino-cli lib install RV8803Tiny

      # Clean compile the code in build directory
      # Gotcha: The main Arduino ino file is named differently than the repo name. 
      # So we had to do some renaming as the compiler follows traditional arduino paradigm,
      # where the main ino file should have the same prefix name as the src root directory. 
      - name: compile binary [clean build in /build/ dir]
        run: |
          rm -rf build
          mv clock_firmware_production.ino watch_firmware.ino
          FQBN_ARG="-b megaTinyCore:megaavr:atxy7:chip=1607,clock=5internal,bodvoltage=1v8,bodmode=disabled,eesave=enable,millis=enabled,resetpin=UPDI,startuptime=0,wiremode=mors,printf=default,attach=allenabled"
          OUTPUT_ARG="--output-dir $(pwd)/build"
          ./arduino-cli compile $FQBN_ARG $OUTPUT_ARG
          mv watch_firmware.ino clock_firmware_production.ino
          cd build
          for f in watch_firmware*; do mv "$f" "clock_firmware_production${f#watch_firmware.ino}"; done
          ls -l
          cd ..


  sync_aws_s3:
    name: Sycn *.hex to AWS S3 as well
    runs-on: ubuntu-latest
    needs: build

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Sync *.hex from build dir to S3 bucket
        run: |
          aws s3 sync ./build/ s3://watchfirmware


  tagged-release:
    name: Create latest release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create latest release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          draft: false
          automatic_release_tag: latest
          title: v1.0.2
          files: |
            $(pwd)/build/*.hex









