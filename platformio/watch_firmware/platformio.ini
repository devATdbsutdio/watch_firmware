; [platformio]
; ; Default build target
; default_envs = 
;     upload_serialUPDI

[env:ATtiny1607]
; [env]
platform = atmelmegaavr
framework = arduino
board = ATtiny1607 ; chip is ATTINY-1607 

monitor_speed = 115200
monitor_port = "/dev/tty/USB0"


; ---------- BUILD PARAMS ---------- ;
lib_deps = https://github.com/dattasaurabh82/RV8803Tiny

; --- Fuse setting -- ;
; [x] clock=5internal
; bodvoltage=1v8
; [x] bodmode=disabled
; [x] eesave=enable
; millis=enabled
; [x] resetpin=UPDI
; startuptime=0
; wiremode=mors
; printf=minimal
; attach=allenabled
board_hardware.oscillator = internal ; Oscillator type (internal or external)
board_build.f_cpu = 5000000L ; 5 MHz internal
board_hardware.bod = disabled 
board_hardware.eesave = yes
board_hardware.rstpin = updi


; ---------- UPLOAD PARAMS ---------- ;
; Serial UPDI based programming setup
core_loc = /Users/saurabhdatta/Library/Arduino15/packages/megaTinyCore
core_ver = 2.5.11
core_python = $CORE_LOC/tools/python3
python_programmer_script = $CORE_LOC/hardware/megaavr/$CORE_VER/tools/prog.py

upload_protocol = custom ; to use serialUPDI
upload_speed = 115200 ; less aggressive baud than 921600
upload_port = "/dev/tty/USB1"
upload_flags =
  -u
  $PYTHON_PROGRAMMER_SCRIPT
  -t 
  uart
  -u
  $UPLOAD_PORT
  -b
  $UPLOAD_SPEED
  -d
  attiny1607
upload_command = $CORE_PYTHON $UPLOAD_FLAGS --fuses 2:0x02 6:0x00 8:0x00 -f ${SOURCE} -a write









; [env:set_fuses]
; ; Fuse setting
; ; [x] clock=5internal
; ; bodvoltage=1v8
; ; [x] bodmode=disabled
; ; [x] eesave=enable
; ; millis=enabled
; ; [x] resetpin=UPDI
; ; startuptime=0
; ; wiremode=mors
; ; printf=minimal
; ; attach=allenabled
; board_hardware.oscillator = internal ; Oscillator type (internal or external)
; board_build.f_cpu = 5000000L ; 5 MHz internal
; board_hardware.bod = disabled 
; board_hardware.eesave = yes
; board_hardware.rstpin = updi

; ; run the following command to set fuses
; ; pio run -e set_fuses -t fuses




; [env:upload_serialUPDI]
; ; upload_flags =
; ;   -PUSB
; ;   -v
; ; upload_protocol = xplainedmini_updi
; upload_protocol = custom
; upload_command = ${env:megaTinyCorePythonLoc} -u ${env:megaTinyCorePythonProg} -t uart -u ${env:upload_port} -b $[env:upload_speed] -d attiny1607 --fuses 2:0x02 6:0x00 8:0x00 -f ${SOURCE} -a write

; ; Run the following command to upload with this environment
; ; pio run -e upload_serialUPDI -t upload
